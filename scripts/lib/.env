# 默认的环境变量配置（构建时会默认加载）
# 调试日志设置
#DEBUG=*
DEBUG=viper:*
#DEBUG=viper:main
#DEBUG=viper:renderer
#DEBUG=viper:electron
#DEBUG=viper:script

# 是否产品构建时使用调试模式
# 会生成sourcemap以及打开electron
ENABLE_PRODUCTION_DEBUG=false

# 控制台日志前缀名称的颜色选取（chalk颜色函数）
LOG_PREFIX_COLOR_MAIN=magenta
LOG_PREFIX_COLOR_RENDERER=blue
LOG_PREFIX_COLOR_ELECTRON=yellow
LOG_PREFIX_COLOR_SCRIPT=green

# 是否在控制台显示颜色
NO_COLOR=false

# 控制台日志前缀格式，可用变量如下：
# {y} {m} {d} {h} {i} {s} {ms} {level} {name}
LOG_PREFIX_FORMAT="[ {name} ]"

# 启用electron模块的代理（仅在开发模式时有效）
# 启用代理后，会对一些模块功能进行拦截处理，以便更好的适用开发
# 比如初次启动应用时，打开应用窗口不会自动聚焦，就是通过代理拦截方法来实现的
USE_MODULE_PROXY_FOR_ELECTRON=true

# 自定义HTTP开发服务器监听地址
#HOST=localhost

# 自定义HTTP服务端口号
PORT=3000

# 进行产品构建时生成映射文件
GENERATE_SOURCEMAP=false

# 是否在开发模式时生成完整的sourcemap
# 生成完整的sourcemap对构建效率有影响
GENERATE_FULL_SOURCEMAP=false

# 自动打开开发者工具
AUTO_OPEN_DEV_TOOLS=true

# 代码变更时自动重启应用
AUTO_RELAUNCH_APP=true

# 重启延时(ms)(不低于2000)
AUTO_RELAUNCH_DELAY=5000

# 开发模式下是否显示不自动聚焦的窗口
WINDOW_FIRST_SHOW_INACTIVE=true

# 设置应用开发日志的输出级别(产品模式下不会输出开发日志)
APP_DEV_LOG_LEVEL=info

# 设置应用产品日志的输出级别(仅在开发模式下生效)
APP_PRO_LOG_LEVEL=info

# 是否将调试日志写到日志文件中（在工程根目录下app.xxx.xxx）
WRITE_LOGS_TO_FILE=false

# 定义渲染进程的构建目标环境(有效值：web或electron-renderer)
RENDERER_BUILD_TARGET=electron-renderer

# 使用node插件，启用该项将会构建本地插件
USE_NODE_ADDONS=true
